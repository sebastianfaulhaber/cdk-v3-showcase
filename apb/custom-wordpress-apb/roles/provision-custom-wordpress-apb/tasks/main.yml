
- name: install vanilla wordpress
  block:
  - name: create wordpress template from github
    shell: 'oc create -f https://raw.githubusercontent.com/sebastianfaulhaber/wordpress-quickstart/master/templates/classic-standalone.json'      
  - name: create wordpress instance from template
    shell: 'oc new-app --template=wordpress-classic-standalone -p APPLICATION_NAME="{{ ocp_app_name }}" -p QUICKSTART_REPOSITORY_URL="https://github.com/sebastianfaulhaber/wordpress-quickstart/"'

- name: finalize install
  block:
  - name: print wordpress login information
    debug:
      msg: 'Wordpress Login information: {{ wp_admin_user }} // {{ wp_admin_password.stdout }}'




##############################################################################
## Provision custom-wordpress
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################


##############################################################################
## An OpenShift Origin deployment configuration provides a replication
## controller, spins up pods, and also provides the ability to transition from
## one deployment of an image to a new one.
## https://docs.openshift.org/latest/architecture/core_concepts/deployments.html#deployments-and-deployment-configurations
##############################################################################
#- name: create deployment config
#  openshift_v1_deployment_config:
#    name: custom-wordpress
#    namespace: '{{ namespace }}'
#    labels:
#      app: custom-wordpress
#      service: custom-wordpress
#    replicas: 1
#    selector:
#      app: custom-wordpress
#      service: custom-wordpress
#    spec_template_metadata_labels:
#      app: custom-wordpress
#      service: custom-wordpress
#    containers:
#    - env:
#      image: docker.io/ansibleplaybookbundle/hello-world:latest # replace with your application image
#      name: custom-wordpress
#      ports:
#      - container_port: 8080
#        protocol: TCP


##############################################################################
## A Kubernetes service serves as an internal load balancer.  It identifies a
## set of replicated pods in order to proxy the connections it receives to them.
## https://docs.openshift.org/latest/architecture/core_concepts/pods_and_services.html#services
##############################################################################
#- name: create custom-wordpress service
#  k8s_v1_service:
#    name: custom-wordpress
#    namespace: '{{ namespace }}'
#    labels:
#      app: custom-wordpress
#      service: custom-wordpress
#    selector:
#      app: custom-wordpress
#      service: custom-wordpress
#    ports:
#      - name: web
#        port: 80
#        target_port: 8080


##############################################################################
## An OpenShift Origin route exposes a service at a host name, so that external
## clients can reach it by name. Each route consists of a name, a service
## selector, and an optional security configuration.
## https://docs.openshift.org/latest/architecture/core_concepts/routes.html
##############################################################################
#- name: create custom-wordpress route
#  openshift_v1_route:
#    name: custom-wordpress
#    namespace: '{{ namespace }}'
#    labels:
#      app: custom-wordpress
#      service: custom-wordpress
#    to_name: custom-wordpress
#    spec_port_target_port: web


