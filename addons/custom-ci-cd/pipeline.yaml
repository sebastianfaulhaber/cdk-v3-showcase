apiVersion: v1
kind: BuildConfig
metadata:
  creationTimestamp: null
  labels:
    app: pipeline
    name: pipeline
  name: pipeline
spec:
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: >
        node {

          stage 'Deploy in TEST'
          openshiftTag(namespace: 'myproject',
              sourceStream: 'nodejs-mongo-persistent',
              sourceTag: 'latest',
              destinationStream: 'nodejs-mongo-persistent',
              destinationTag: 'promoteQA')
            
          openshiftDeploy(namespace: 'myproject-test',
                deploymentConfig: 'nodejs-mongo-persistent',
                waitTime: '300000')

          openshiftScale(namespace: 'myproject-test',
                deploymentConfig: 'nodejs-mongo-persistent',
                waitTime: '300000',
                replicaCount: '2')
            
          stage 'Verify deploy in TEST'
          openshiftVerifyDeployment(namespace: 'myproject-test',
                    depCfg: 'nodejs-mongo-persistent',
                    replicaCount:'2',
                    verifyReplicaCount: 'true',
                    waitTime: '300000')

          stage 'Deploy to PRODUCTION'
          timeout(time: 2, unit: 'DAYS') {
              input message: 'Approve promotion to production?'
          }

          openshiftTag(namespace: 'myproject',
              sourceStream: 'nodejs-mongo-persistent',
              sourceTag: 'latest',
              destinationStream: 'nodejs-mongo-persistent',
              destinationTag: 'promotePRD')

          openshiftDeploy(namespace: 'myproject-prod',
                deploymentConfig: 'nodejs-mongo-persistent',
                waitTime: '300000')

          openshiftScale(namespace: 'myproject-prod',
                deploymentConfig: 'nodejs-mongo-persistent',
                waitTime: '300000',
                replicaCount: '2')

          stage 'Verify deploy in PRODUCTION'
          openshiftVerifyDeployment(namespace: 'myproject-prod',
                    depCfg: 'nodejs-mongo-persistent',
                    replicaCount:'2',
                    verifyReplicaCount: 'true',
                    waitTime: '300000')
        }
    type: JenkinsPipeline
  triggers:
  - github:
      secret: secret101
    type: GitHub
  - generic:
      secret: secret101
    type: Generic
  - imageChange:
      from:
        kind: ImageStreamTag
        name: 'nodejs-mongo-persistent:latest'
        namespace: myproject
    type: ImageChange
status:
  lastVersion: 0